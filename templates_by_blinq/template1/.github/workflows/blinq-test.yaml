#
# Copyright (c) Microsoft Corporation
# Licensed under the MIT License.
#

name: blinQ test workflow

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  LZ_REPO: '{{ ignite.global.lz_repo }}'
  LZ_REF: '{{ ignite.global.lz_ref }}'
  CAF_REPO: '{{ ignite.global.caf_repo }}'
  CAF_REF: '{{ ignite.global.caf_ref }}'
  CAF_ENVIRONMENT: {{ ignite.global.caf_environment }}
{% raw %}
jobs:
  environment:
    if: ${{ contains(github.event.pull_request.labels.*.name, 'CAF-END2END') || github.event.schedule != '' || github.event_name == 'workflow_dispatch' }}
    name: Setup Environment
{% endraw %}
    runs-on: [self-hosted, rover-{{ ignite.global.caf_environment }}]
{% raw %}
    outputs:
      lz_repo: ${{ steps.set_env.outputs.lz_repo }}
      lz_ref: ${{ steps.set_env.outputs.lz_ref }}
      caf_repo: ${{ steps.set_env.outputs.caf_repo }}
      caf_ref: ${{ steps.set_env.outputs.caf_ref }}
      environment: ${{ steps.set_env.outputs.environment }}
    steps:
      - name: Set environment variables for reusable workflows
        id: set_env
        run: |
          echo "lz_repo=$LZ_REPO" >> $GITHUB_OUTPUT
          echo "lz_ref=$LZ_REF" >> $GITHUB_OUTPUT
          echo "caf_repo=$CAF_REPO" >> $GITHUB_OUTPUT
          echo "caf_ref=$CAF_REF" >> $GITHUB_OUTPUT
          echo "environment=$CAF_ENVIRONMENT" >> $GITHUB_OUTPUT
  debug:
    name: Debug job
{% endraw %}
    runs-on: [self-hosted, rover-{{ ignite.global.caf_environment }}]
{% raw %}
    needs: [environment]
    steps:
      - id: debug
        name: Debug step
        shell: bash
        run: |
          echo "Run debug step from parent workflow"
          echo "Public IP " $(host myip.opendns.com resolver1.opendns.com | grep Address)
          echo "Hostname: " $(hostname)
  launchpad:
    name: Launchpad
    uses: blinqas/azlz-workflows/.github/workflows/rover-by-blinq.yaml@main
    needs: [environment]
    secrets:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_LAUNCHPAD_SUBSCRIPTION_ID: ${{ secrets.AZURE_MANAGEMENT_SUBSCRIPTION_ID }}
      AZURE_TARGET_SUBSCRIPTION_ID: ${{ secrets.AZURE_MANAGEMENT_SUBSCRIPTION_ID }}
    permissions:
      id-token: write
      contents: read
    with:
      jobs: login, checkout, plan, apply
      lz_ref: ${{ needs.environment.outputs.lz_ref }}
      lz_repo: ${{ needs.environment.outputs.lz_repo }}
      caf_ref: ${{ needs.environment.outputs.caf_ref }}
      caf_repo: ${{ needs.environment.outputs.caf_repo }}
      environment: ${{ needs.environment.outputs.environment }}
      caf_identity_aad_key: cred_level0
      landingzone_code_path: ./landingzones/caf_launchpad
      landingzone_configuration_path: ./platform/configuration/level0/launchpad
      plan_path: ${GITHUB_WORKSPACE}/caf_launchpad.tfstate.tfplan
      tfstate: caf_launchpad.tfstate
      level: level0
      terraform_action: plan_apply
{% endraw %}